provider "aws" {
  region = "us-west-2"
}

locals {
  role_name = "existing_role_name"  # Replace with the name of the existing IAM role
}

# Define IAM Policy
resource "aws_iam_policy" "example_policy" {
  name        = "example_policy"
  description = "An example policy"
  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = [
          "s3:ListBucket",
        ],
        Effect = "Allow",
        Resource = [
          "arn:aws:s3:::example-bucket",
        ],
      },
    ],
  })
}

# Detach old policies from the role
data "aws_iam_role" "existing_role" {
  name = local.role_name
}

data "aws_iam_role_policies" "existing_policies" {
  role_name = data.aws_iam_role.existing_role.name
}

resource "aws_iam_role_policy_detachments" "old_policies_detach" {
  for_each = toset(data.aws_iam_role_policies.existing_policies.policy_names)

  role_name   = data.aws_iam_role.existing_role.name
  policy_arn  = "arn:aws:iam::${data.aws_caller_identity.current.account_id}:policy/${each.value}"
}

# Attach new policy to the role
resource "aws_iam_role_policy_attachment" "example_attach" {
  policy_arn = aws_iam_policy.example_policy.arn
  role       = data.aws_iam_role.existing_role.name
}

