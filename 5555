data "aws_iam_role" "existing" {
  name = "existing-role-name"
}


resource "aws_iam_policy" "example_policy" {
  name        = "example-policy"
  description = "An example policy"

  policy = jsonencode({
    Version = "2012-10-17",
    Statement = [
      {
        Action = [
          "s3:ListBucket",
        ],
        Effect = "Allow",
        Resource = [
          "arn:aws:s3:::example-bucket",
        ],
      },
    ]
  })
}



resource "aws_iam_role_policy_attachment" "attach_policy" {
  role       = data.aws_iam_role.existing.name
  policy_arn = aws_iam_policy.example_policy.arn
}


resource "null_resource" "detach_old_policies" {
  provisioner "local-exec" {
    command = <<EOT
      for policy_arn in $(aws iam list-attached-role-policies --role-name ${data.aws_iam_role.existing.name} --query 'AttachedPolicies[].PolicyArn' --output text); do
        aws iam detach-role-policy --role-name ${data.aws_iam_role.existing.name} --policy-arn $policy_arn
      done
    EOT
  }

  triggers = {
    always_run = "${timestamp()}"
  }

  depends_on = [aws_iam_role_policy_attachment.attach_policy]
}
