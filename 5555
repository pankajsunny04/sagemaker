provider "aws" {
  region = "us-west-2"
}

data "aws_iam_role" "existing_role" {
  name = "your-existing-role-name"
}

data "aws_iam_policy" "existing_policies" {
  arn = [
    "arn:aws:iam::aws:policy/Policy1",
    "arn:aws:iam::aws:policy/Policy2"
    // add more policies that you want to detach
  ]
}

# Create a new policy
resource "aws_iam_policy" "new_policy" {
  count = data.aws_iam_role.existing_role ? 1 : 0
  name        = "my_new_policy"
  description = "A new test policy"
  policy      = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action   = ["s3:ListBucket"]
        Effect   = "Allow"
        Resource = ["*"]
      }
    ]
  })
}

# Attach the new policy to the existing role
resource "aws_iam_role_policy_attachment" "new_policy_attachment" {
  count      = data.aws_iam_role.existing_role && aws_iam_policy.new_policy[0] ? 1 : 0
  role       = data.aws_iam_role.existing_role.name
  policy_arn = aws_iam_policy.new_policy[0].arn
}

# Detach all old policies
resource "aws_iam_role_policy_attachment" "detach_old_policies" {
  count      = data.aws_iam_role.existing_role ? length(data.aws_iam_policy.existing_policies.arn) : 0
  role       = data.aws_iam_role.existing_role.name
  policy_arn = data.aws_iam_policy.existing_policies.arn[count.index]
  lifecycle {
    create_before_destroy = false
    ignore_changes = [
      role,
      policy_arn
    ]
  }
}
