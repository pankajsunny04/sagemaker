provider "aws" {
  region = "us-west-2"
}

locals {
  role_name = "your-existing-role-name"
}

# Fetch existing IAM role
data "aws_iam_role" "existing" {
  name = local.role_name
}

# Create a policy
resource "aws_iam_policy" "my_policy" {
  count       = data.aws_iam_role.existing ? 1 : 0
  name        = "my-policy"
  path        = "/"
  description = "My test policy"
  policy      = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "s3:ListBucket",
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::example-bucket"
    }
  ]
}
EOF
}

# Detach all existing attached policies
data "aws_iam_role_policies" "existing_policies" {
  role_name = local.role_name
}

resource "aws_iam_role_policy_attachment" "remove_old_policies" {
  for_each   = toset(data.aws_iam_role_policies.existing_policies.policy_names)
  role       = local.role_name
  policy_arn = each.key
  count      = 0 # set to 0 to detach
}

# Attach the new policy
resource "aws_iam_role_policy_attachment" "my_policy_attach" {
  depends_on  = [aws_iam_role_policy_attachment.remove_old_policies]
  role        = local.role_name
  policy_arn  = aws_iam_policy.my_policy[0].arn
}
