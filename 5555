provider "aws" {
  region = "us-east-1"
}

locals {
  role_name = "existing_role_name"
}

data "aws_iam_role" "existing" {
  name = local.role_name
}

resource "aws_iam_policy" "example_policy" {
  count       = data.aws_iam_role.existing ? 1 : 0
  name        = "example_policy"
  description = "An example policy"
  policy      = <<EOT
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": "s3:ListBucket",
      "Effect": "Allow",
      "Resource": "arn:aws:s3:::example_bucket"
    }
  ]
}
EOT
}

data "aws_iam_role_policies" "existing_policies" {
  role_name = local.role_name
}

resource "aws_iam_role_policy_attachment" "old_policy_detach" {
  for_each   = toset(data.aws_iam_role_policies.existing_policies.policy_names)
  role       = data.aws_iam_role.existing.name
  policy_arn = each.value
  count      = 0 # Set to 0 to detach all old policies, set to 1 if you want to attach them
}

resource "aws_iam_role_policy_attachment" "example_attach" {
  count      = data.aws_iam_role.existing ? 1 : 0
  role       = data.aws_iam_role.existing.name
  policy_arn = aws_iam_policy.example_policy[0].arn
}
