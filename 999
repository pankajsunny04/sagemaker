# modules/alb/main.tf
resource "aws_lb" "example" {
  name               = var.alb_name
  internal           = var.internal
  load_balancer_type = "application"
  subnets            = var.subnet_ids

  enable_deletion_protection = var.enable_deletion_protection

  enable_http2 = true

  enable_cross_zone_load_balancing = var.enable_cross_zone_load_balancing

  tags = {
    Name = var.alb_name
  }
}

resource "aws_lb_listener" "example" {
  load_balancer_arn = aws_lb.example.arn
  port              = var.listener_port
  protocol          = "HTTP"

  default_action {
    type             = "fixed-response"
    fixed_response {
      content_type = "text/plain"
      status_code  = "200"
      content      = "OK"
    }
  }
}

resource "aws_cloudwatch_metric_alarm" "unhealthy_host_alarm" {
  alarm_name          = var.alarm_name
  comparison_operator = "GreaterThanOrEqualToThreshold"
  evaluation_periods = var.evaluation_periods
  metric_name        = "HTTPCode_Target_5XX_Count"
  namespace          = "AWS/ApplicationELB"
  period             = var.period
  statistic          = "Sum"
  threshold           = var.threshold
  alarm_description   = var.alarm_description
  alarm_actions      = [var.sns_topic_arn]
  dimensions = {
    LoadBalancer = aws_lb.example.id
  }
}

module "alb" {
  source = "./modules/alb"

  alb_name                    = "my-alb"
  internal                    = false
  subnet_ids                  = ["subnet-1", "subnet-2"]
  enable_deletion_protection  = false
  enable_cross_zone_load_balancing = true
  listener_port               = 80
}

