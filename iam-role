provider "aws" {
  region = "us-west-2"  # Replace with your desired AWS region
}

resource "aws_iam_role" "custom_role" {
  name = "CustomRole"

  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}



data "aws_iam_policy_document" "policy1" {
  statement {
    actions   = ["s3:ListBucket"]
    resources = ["arn:aws:s3:::example-bucket"]
  }
}

data "aws_iam_policy_document" "policy2" {
  statement {
    actions   = ["s3:GetObject"]
    resources = ["arn:aws:s3:::example-bucket/*"]
  }
}




resource "aws_iam_policy" "custom_policy1" {
  name        = "CustomPolicy1"
  description = "Custom policy 1"
  policy      = data.aws_iam_policy_document.policy1.json
}

resource "aws_iam_policy" "custom_policy2" {
  name        = "CustomPolicy2"
  description = "Custom policy 2"
  policy      = data.aws_iam_policy_document.policy2.json
}



resource "aws_iam_role_policy_attachment" "attach_policy1" {
  policy_arn = aws_iam_policy.custom_policy1.arn
  role       = aws_iam_role.custom_role.name
}

resource "aws_iam_role_policy_attachment" "attach_policy2" {
  policy_arn = aws_iam_policy.custom_policy2.arn
  role       = aws_iam_role.custom_role.name
}





provider "aws" {
  region = "us-west-2"  # Change this to your desired AWS region
}

resource "aws_iam_role" "example_role" {
  name = "example-role"
  assume_role_policy = jsonencode({
    Version = "2012-10-17"
    Statement = [
      {
        Action = "sts:AssumeRole"
        Effect = "Allow"
        Principal = {
          Service = "ec2.amazonaws.com"
        }
      }
    ]
  })
}

data "aws_iam_policy_document" "policy1" {
  source_json = file("${path.module}/policies/policy1.json")
}

data "aws_iam_policy_document" "policy2" {
  source_json = file("${path.module}/policies/policy2.json")
}

resource "aws_iam_role_policy_attachment" "policy1_attachment" {
  policy_arn = aws_iam_policy.policy1.arn
  role       = aws_iam_role.example_role.name
}

resource "aws_iam_role_policy_attachment" "policy2_attachment" {
  policy_arn = aws_iam_policy.policy2.arn
  role       = aws_iam_role.example_role.name
}

