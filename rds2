variable "region" {
  description = "AWS region"
  default     = "us-west-2"
}

variable "availability_zones" {
  description = "List of availability zones"
  type        = list(string)
}

variable "db_name" {
  description = "Database name"
}

variable "db_username" {
  description = "Database username"
}

variable "db_password" {
  description = "Database password"
  sensitive   = true
}

variable "db_instance_type" {
  description = "Instance type for the database"
  default     = "db.t3.micro"
}

variable "db_engine" {
  description = "Database engine. e.g., postgres, aurora, aurora-postgresql, etc."
}

variable "db_engine_version" {
  description = "Database engine version"
}

variable "db_parameter_group_name" {
  description = "Name of the DB parameter group"
  default     = "default.postgres10"
}

variable "multi_az" {
  description = "Multi-AZ deployment"
  default     = false
}

variable "allocated_storage" {
  description = "Allocated storage size in GB"
  default     = 20
}


provider "aws" {
  region = var.region
}

resource "aws_db_instance" "default" {
  count                      = var.db_engine != "aurora" && var.db_engine != "aurora-postgresql" ? 1 : 0
  name                       = var.db_name
  username                   = var.db_username
  password                   = var.db_password
  engine                     = var.db_engine
  engine_version             = var.db_engine_version
  instance_class             = var.db_instance_type
  allocated_storage          = var.allocated_storage
  vpc_security_group_ids     = [aws_security_group.default.id]
  db_subnet_group_name       = aws_db_subnet_group.default.name
  parameter_group_name       = var.db_parameter_group_name
  multi_az                   = var.multi_az
  publicly_accessible        = false
  storage_encrypted          = true
}

resource "aws_rds_cluster" "default" {
  count                      = var.db_engine == "aurora" || var.db_engine == "aurora-postgresql" ? 1 : 0
  cluster_identifier         = var.db_name
  availability_zones         = var.availability_zones
  database_name              = var.db_name
  master_username            = var.db_username
  master_password            = var.db_password
  db_cluster_parameter_group_name = var.db_parameter_group_name
  vpc_security_group_ids     = [aws_security_group.default.id]
  db_subnet_group_name       = aws_db_subnet_group.default.name
  backup_retention_period    = 5
  preferred_backup_window    = "07:00-09:00"
  engine                     = var.db_engine
  engine_version             = var.db_engine_version
  storage_encrypted          = true
}

resource "aws_security_group" "default" {
  name        = "${var.db_name}-sg"
  description = "Security group for RDS instance or Aurora cluster"
}

resource "aws_db_subnet_group" "default" {
  name       = "${var.db_name}-subnet-group"
  subnet_ids = var.subnet_ids
}


output "db_endpoint" {
  value = var.db_engine != "aurora" && var.db_engine != "aurora-postgresql" ? aws_db_instance.default[0].endpoint : aws_rds_cluster.default[0].endpoint
}

output "security_group_id" {
  value = aws_security_group.default.id
}


module "db" {
  source                 = "./path/to/module"
  availability_zones     = ["us-west-2a", "us-west-2b"]
  db_name                = "mydb"
  db_username            = "myuser"
  db_password            = "mypassword"
  db_engine              = "aurora-postgresql"
  db_engine_version      = "11.9"
  db_parameter_group_name = "custom-parameter-group"
  subnet_ids             = ["subnet-0bb1c79de3EXAMPLE", "subnet-0bb1c79de3EXAMPLE"]
}

output "db_endpoint" {
  value = module.db.db_endpoint
}

output "security_group_id" {
  value = module.db.security_group_id
}
